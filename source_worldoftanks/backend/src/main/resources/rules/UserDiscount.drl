package rules;
dialect  "mvel"
import com.example.WoTRecommender.model.User;
import com.example.WoTRecommender.model.UserCategory;
import com.example.WoTRecommender.model.TankType;
import com.example.WoTRecommender.model.TankStatus;
import com.example.WoTRecommender.model.Tank;
import java.util.List;

//chaining rules for setting discount
rule "If user bougth thanks in value more than 100$, set user category to gold"

    when
        $u: User(userCategory == UserCategory.NA, discount==false, paidmoney>=100)
    then
    	modify($u) {setUserCategory(UserCategory.GOLD)}
end

rule "If user have GOLD category, add 50$ to his account balance but only once"

    no-loop
    when
        $u: User(userCategory == UserCategory.GOLD, paidmoney>=100,$bl : balance)
    then
        System.out.println("Gold user got his balance buffed");
       	modify($u) { setBalance($bl+50)}
end

rule "Give 20% discount to user if he bought more than 2 PREMIUM tanks"
  when $u : User($ownedTanks : tanks, $b:balance)
  $tanks : List() from collect(Tank());
  Number(intValue > 1) from accumulate(
  $t : Tank(
    tankStatus == TankStatus.PREMIUM
  )from $tanks,
  count($t)
  )
  then
    modify($u) {setBalance($b+50) , setDiscount(true) }
end